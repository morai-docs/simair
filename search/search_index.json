{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MORAI SIM Air Documentation \ud83d\udc4d \uf0c1 This document is a user guide for MORAI SIM: AiR Alpha version provided to CIRRUS AIRCRAGT Take a look the MORAI SIM: Air 's concept and features. Start MORAI SIM: Air by reading the introductory tutorial , then check the user guide for more information. To checkout MORAI SIM: Air , Go to Introduction To start MORAI SIM: Air , Go to Getting Started To use MORAI SIM: Air , Go to User Guide \u2139\ufe0f NOTE All documentation source files for this guide are > written in Markdown, and configured with a single YAML configuration file. EXAMPLE: Advanced example: This produces warnings based on the Markdown content (and warnings are fatal in strict mode): import logging, re import mkdocs.plugins log = logging.getLogger('mkdocs') @mkdocs.plugins.event_priority(-50) def on_page_markdown(markdown, page, **kwargs): path = page.file.src_uri for m in re.finditer(r'\\bhttp://[^) ]+', markdown): log.warning(f\"Documentation file '{path}' contains a non-HTTPS link: {m[0]}\") NOTE: Suggested useful configurations: GitHub Wiki: (e.g. https://github.com/project/repo/wiki/foo/bar/_edit ) repo_url: 'https://github.com/project/repo/wiki' edit_uri_template: '{path_noext}/_edit' BitBucket editor: (e.g. https://bitbucket.org/project/repo/src/master/docs/foo/bar.md?mode=edit ) repo_url: 'https://bitbucket.org/project/repo/' edit_uri_template: 'src/master/docs/{path}?mode=edit' GitLab Static Site Editor: (e.g. https://gitlab.com/project/repo/-/sse/master/docs%2Ffoo%2bar.md ) repo_url: 'https://gitlab.com/project/repo' edit_uri_template: '-/sse/master/docs%2F{path!q}' GitLab Web IDE: (e.g. https://gitlab.com/-/ide/project/repo/edit/master/-/docs/foo/bar.md ) ```yaml edit_uri_template: 'https://gitlab.com/-/ide/project/repo/edit/master/-/docs/{path}' and theme.name is set to null , then the entire theme configuration must be defined in the [theme] configuration option in the mkdocs.yml file. However, when a theme is [packaged] up for distribution, and loaded using the theme.name configuration option, then a mkdocs_theme.yml file is required for the theme. \uace0\uc591\uc774 \uc0ac\uc9c4","title":"Welcome to MORAI SIM Air Documentation \ud83d\udc4d"},{"location":"#welcome-to-morai-sim-air-documentation","text":"This document is a user guide for MORAI SIM: AiR Alpha version provided to CIRRUS AIRCRAGT Take a look the MORAI SIM: Air 's concept and features. Start MORAI SIM: Air by reading the introductory tutorial , then check the user guide for more information. To checkout MORAI SIM: Air , Go to Introduction To start MORAI SIM: Air , Go to Getting Started To use MORAI SIM: Air , Go to User Guide \u2139\ufe0f NOTE All documentation source files for this guide are > written in Markdown, and configured with a single YAML configuration file. EXAMPLE: Advanced example: This produces warnings based on the Markdown content (and warnings are fatal in strict mode): import logging, re import mkdocs.plugins log = logging.getLogger('mkdocs') @mkdocs.plugins.event_priority(-50) def on_page_markdown(markdown, page, **kwargs): path = page.file.src_uri for m in re.finditer(r'\\bhttp://[^) ]+', markdown): log.warning(f\"Documentation file '{path}' contains a non-HTTPS link: {m[0]}\") NOTE: Suggested useful configurations: GitHub Wiki: (e.g. https://github.com/project/repo/wiki/foo/bar/_edit ) repo_url: 'https://github.com/project/repo/wiki' edit_uri_template: '{path_noext}/_edit' BitBucket editor: (e.g. https://bitbucket.org/project/repo/src/master/docs/foo/bar.md?mode=edit ) repo_url: 'https://bitbucket.org/project/repo/' edit_uri_template: 'src/master/docs/{path}?mode=edit' GitLab Static Site Editor: (e.g. https://gitlab.com/project/repo/-/sse/master/docs%2Ffoo%2bar.md ) repo_url: 'https://gitlab.com/project/repo' edit_uri_template: '-/sse/master/docs%2F{path!q}' GitLab Web IDE: (e.g. https://gitlab.com/-/ide/project/repo/edit/master/-/docs/foo/bar.md ) ```yaml edit_uri_template: 'https://gitlab.com/-/ide/project/repo/edit/master/-/docs/{path}' and theme.name is set to null , then the entire theme configuration must be defined in the [theme] configuration option in the mkdocs.yml file. However, when a theme is [packaged] up for distribution, and loaded using the theme.name configuration option, then a mkdocs_theme.yml file is required for the theme. \uace0\uc591\uc774 \uc0ac\uc9c4","title":"Welcome to MORAI SIM Air Documentation \ud83d\udc4d"},{"location":"release-notes/","text":"Release Notes \uf0c1 This section describes the additions, changes, and bug fixes reflected in MORAI SIM: Air by latest and previous versions. Latest \uf0c1 Version Additions and Changes Bug Fixes Alpha 1.0 Initial distribution Previous versions \uf0c1 N/A","title":"\ud83d\uddc2\ufe0f Release Note"},{"location":"release-notes/#release-notes","text":"This section describes the additions, changes, and bug fixes reflected in MORAI SIM: Air by latest and previous versions.","title":"Release Notes"},{"location":"release-notes/#latest","text":"Version Additions and Changes Bug Fixes Alpha 1.0 Initial distribution","title":"Latest"},{"location":"release-notes/#previous-versions","text":"N/A","title":"Previous versions"},{"location":"about/overview/","text":"Document Overview \uf0c1 This section describes the purpose, target audiences, and scope of this document. Purpose \uf0c1 This document is written to guide the configuration environment and usage of \u2018MORAI SIM: Air\u2019, an autonomous flight simulation platform developed by Morai. Target Audience \uf0c1 This document is written for aeronautical developers and researchers who want to verify air vehicles in various simulated virtual environments. Scope \uf0c1 The scope of application of this document applies to the configuration environment and user interface of MORAI SIM: Air, and all functions provided by MORAI SIM: Air.","title":"Document Overview"},{"location":"about/overview/#document-overview","text":"This section describes the purpose, target audiences, and scope of this document.","title":"Document Overview"},{"location":"about/overview/#purpose","text":"This document is written to guide the configuration environment and usage of \u2018MORAI SIM: Air\u2019, an autonomous flight simulation platform developed by Morai.","title":"Purpose"},{"location":"about/overview/#target-audience","text":"This document is written for aeronautical developers and researchers who want to verify air vehicles in various simulated virtual environments.","title":"Target Audience"},{"location":"about/overview/#scope","text":"The scope of application of this document applies to the configuration environment and user interface of MORAI SIM: Air, and all functions provided by MORAI SIM: Air.","title":"Scope"},{"location":"about/revision-history/","text":"Revision History \uf0c1 This section describes the revision history of the document in chronological order. Doc Version Product Version Release Date Descriptions Author 1.0 Alpha 1.0 Initial Release MORAI Engineering Service Team","title":"Revision History"},{"location":"about/revision-history/#revision-history","text":"This section describes the revision history of the document in chronological order. Doc Version Product Version Release Date Descriptions Author 1.0 Alpha 1.0 Initial Release MORAI Engineering Service Team","title":"Revision History"},{"location":"about/terms-conventions/","text":"Terminology and Conventions \uf0c1 This section describes key terms and conventions commonly used in the document. Terminology \uf0c1 The key Terms and Abbreviations used in this documents are listed below: Terms and Abbreviations Descriptions Ego Vehicle Control flight target aircraft in the simulator NPC Vehicle Surrounding aircraft that are not controlled flight targets in the simulator ROS2 The latest version of Robot Operating System(ROS) JSBSim An open source, multi-platform, object-oriented flight dynamics model (FDM) framework written in the C++ programming language AOA Angle of Attack, unit: degrees CAS Calibrated Airspeed, unit: knots GS Ground Speed, unit: knots Attitude Indicator Shows the altitude of the aircrafte Altimeter Shows the altitude of the aircraft above ground level(AGL) in feet Vertical Speed Indicator Shows the vertical speed of the aircraft in feet per minute Conventions \uf0c1 The notational conventions for notes, warnings, and tips used in this document are as follows: \u2139\ufe0f NOTE General Information for related matters. \u26a0\ufe0f WARNING For matters you should follow when setting or configuration \u2705 TIPS Useful tips when setting or configuration","title":"Terminology and Conventions"},{"location":"about/terms-conventions/#terminology-and-conventions","text":"This section describes key terms and conventions commonly used in the document.","title":"Terminology and Conventions"},{"location":"about/terms-conventions/#terminology","text":"The key Terms and Abbreviations used in this documents are listed below: Terms and Abbreviations Descriptions Ego Vehicle Control flight target aircraft in the simulator NPC Vehicle Surrounding aircraft that are not controlled flight targets in the simulator ROS2 The latest version of Robot Operating System(ROS) JSBSim An open source, multi-platform, object-oriented flight dynamics model (FDM) framework written in the C++ programming language AOA Angle of Attack, unit: degrees CAS Calibrated Airspeed, unit: knots GS Ground Speed, unit: knots Attitude Indicator Shows the altitude of the aircrafte Altimeter Shows the altitude of the aircraft above ground level(AGL) in feet Vertical Speed Indicator Shows the vertical speed of the aircraft in feet per minute","title":"Terminology"},{"location":"about/terms-conventions/#conventions","text":"The notational conventions for notes, warnings, and tips used in this document are as follows: \u2139\ufe0f NOTE General Information for related matters. \u26a0\ufe0f WARNING For matters you should follow when setting or configuration \u2705 TIPS Useful tips when setting or configuration","title":"Conventions"},{"location":"getting-started/","text":"Getting Startged with MORAI SIM: AIR \uf0c1 Installation User Interface","title":"Getting Startged with MORAI SIM: AIR"},{"location":"getting-started/#getting-startged-with-morai-sim-air","text":"Installation User Interface","title":"Getting Startged with MORAI SIM: AIR"},{"location":"getting-started/installation/","text":"Installation \uf0c1 This section describes the system requirements for installing MORAI SIM: Air and how to run it. System Requirements \uf0c1 The OS environment in which MORAI SIM: Air can run is as follows. Windows 10 or higher Ubuntu 18.04 LTS or higher To install and run MORAI SIM: Air, the user's system should meet the minimum or recommended specifications. Minimum specifications \uf0c1 To use the basic functions of MORAI SIM: Air, the following system requirements should be satisfied. CPU: Intel i5-9600KF or AMD Ryzen 5 3500X RAM: DDR4 16GB VGA: NVIDIA GeForce RTX 2060 Super Recommanded specifications \uf0c1 To use multiple sensors in MORAI SIM: Air, the system requirements below should be satisfied. CPU: Intel i9-9900K or AMD Ryzen 7 3700X or higher RAM: DDR4 64GB (or higher VGA: NVIDIA GeForce RTX 2080 Ti or higher Running MORAI SIM: Air \uf0c1 Install and run MORAI SIM: Air in the following order. Step 1: Download MIRAI SIM launcher \uf0c1 Download the MORAI SIM Launcher package in the path below according to the user's OS environment. Windows: Linux: Step 2: Run the launcher program \uf0c1 1) Run UELauncher.exe from the downloaded package path. 2) On the launcher execution screen as shown below, click Start after entering the Username and Password guided by MORAI. \u2705 TIPS For details regarding Username and Password information, please contact the MORAI project manager . Step 3: Select Map and Aircraft \uf0c1 After launcher execution is completed, the following Map and Vehicle screen appears. After selecting both the map and aircraft model to be used in the simulator, click Start to run the simulator. \u2705 TIPS The start button does not appear unless either the map or aircraft model is selected. Step 4: Check the simulator run \uf0c1 When the MORAI SIM:Air simulator is normally executed, the following simulator execution screen appears.","title":"Installation"},{"location":"getting-started/installation/#installation","text":"This section describes the system requirements for installing MORAI SIM: Air and how to run it.","title":"Installation"},{"location":"getting-started/installation/#system-requirements","text":"The OS environment in which MORAI SIM: Air can run is as follows. Windows 10 or higher Ubuntu 18.04 LTS or higher To install and run MORAI SIM: Air, the user's system should meet the minimum or recommended specifications.","title":"System Requirements"},{"location":"getting-started/installation/#minimum-specifications","text":"To use the basic functions of MORAI SIM: Air, the following system requirements should be satisfied. CPU: Intel i5-9600KF or AMD Ryzen 5 3500X RAM: DDR4 16GB VGA: NVIDIA GeForce RTX 2060 Super","title":"Minimum specifications"},{"location":"getting-started/installation/#recommanded-specifications","text":"To use multiple sensors in MORAI SIM: Air, the system requirements below should be satisfied. CPU: Intel i9-9900K or AMD Ryzen 7 3700X or higher RAM: DDR4 64GB (or higher VGA: NVIDIA GeForce RTX 2080 Ti or higher","title":"Recommanded specifications"},{"location":"getting-started/installation/#running-morai-sim-air","text":"Install and run MORAI SIM: Air in the following order.","title":"Running MORAI SIM: Air"},{"location":"getting-started/installation/#step-1-download-mirai-sim-launcher","text":"Download the MORAI SIM Launcher package in the path below according to the user's OS environment. Windows: Linux:","title":"Step 1: Download MIRAI SIM launcher"},{"location":"getting-started/installation/#step-2-run-the-launcher-program","text":"1) Run UELauncher.exe from the downloaded package path. 2) On the launcher execution screen as shown below, click Start after entering the Username and Password guided by MORAI. \u2705 TIPS For details regarding Username and Password information, please contact the MORAI project manager .","title":"Step 2: Run the launcher program"},{"location":"getting-started/installation/#step-3-select-map-and-aircraft","text":"After launcher execution is completed, the following Map and Vehicle screen appears. After selecting both the map and aircraft model to be used in the simulator, click Start to run the simulator. \u2705 TIPS The start button does not appear unless either the map or aircraft model is selected.","title":"Step 3: Select Map and Aircraft"},{"location":"getting-started/installation/#step-4-check-the-simulator-run","text":"When the MORAI SIM:Air simulator is normally executed, the following simulator execution screen appears.","title":"Step 4: Check the simulator run"},{"location":"getting-started/ui/","text":"User Interface \uf0c1 This section discribes an overview of the MORAI SIM: Air user interface (UI) and provides the detailed information on each UI component. UI Overview \uf0c1 The MORAI SIM: Air UI is designed to provide users with easy access to all necessary information and controls, allowing for a realistic and immersive simulation experience. Default UI \uf0c1 The default UI that appears as soon as you enter the simulater for the first time consists of the following three parts, centering on the map and aircraft selected in the previous step. 1] Network and Sensor Settings \uf0c1 This menu is located in the upper left corner of the screen and provides access to the core features provided by the simulator, such as networks and sensors. 2] Environment Settings \uf0c1 Environment settings exist at the top right of the screen, and select the weather and time zone that determine the background and illumination of the simulator. 3] Flight Instruments \uf0c1 The flight instrument and provides real-time flight information such as the current heading, air speed, attitude, and altitude of the aircraft. Aircraft Info UI \uf0c1 The aircraft information UI shows the aircraft control mode and the current flight status and steering input values of the aircraft, such as speed, air pressure, control surface and attitude, in detailed numerical values. If you click the mouse on the Ego aircraft, the aircraft information window appears on the right side of the simulator screen as shown below. 1] Aircraft Control Mode \uf0c1 Displays the mode to control the Ego aircraft with Manual Control Mode and Network Control Mode . 2] Proopulsion \uf0c1 Displays engine RPM, air speed (knots), thrust according to throttle control and manifold pressure (inHg) according to aircraft altitude. 3] Flight Control \uf0c1 Displays the attitude value according to the flight control surfaces and trim control, and the altitude and speed values \u200b\u200baccording to the vertical and horizontal movement of the aircraft in detailed numerical values. The attitude value of an aircraft can be displayed based on the control surface and trim control. The control surfaces, such as the ailerons and elevators, are used to control the roll, pitch, and yaw of the aircraft, while the trim control is used to adjust the neutral position of these surfaces. The altitude and speed values of the aircraft can be displayed in detailed numerical values based on its vertical and horizontal movement.","title":"User Interface"},{"location":"getting-started/ui/#user-interface","text":"This section discribes an overview of the MORAI SIM: Air user interface (UI) and provides the detailed information on each UI component.","title":"User Interface"},{"location":"getting-started/ui/#ui-overview","text":"The MORAI SIM: Air UI is designed to provide users with easy access to all necessary information and controls, allowing for a realistic and immersive simulation experience.","title":"UI Overview"},{"location":"getting-started/ui/#default-ui","text":"The default UI that appears as soon as you enter the simulater for the first time consists of the following three parts, centering on the map and aircraft selected in the previous step.","title":"Default UI"},{"location":"getting-started/ui/#1-network-and-sensor-settings","text":"This menu is located in the upper left corner of the screen and provides access to the core features provided by the simulator, such as networks and sensors.","title":"1] Network and Sensor Settings"},{"location":"getting-started/ui/#2-environment-settings","text":"Environment settings exist at the top right of the screen, and select the weather and time zone that determine the background and illumination of the simulator.","title":"2] Environment Settings"},{"location":"getting-started/ui/#3-flight-instruments","text":"The flight instrument and provides real-time flight information such as the current heading, air speed, attitude, and altitude of the aircraft.","title":"3] Flight Instruments"},{"location":"getting-started/ui/#aircraft-info-ui","text":"The aircraft information UI shows the aircraft control mode and the current flight status and steering input values of the aircraft, such as speed, air pressure, control surface and attitude, in detailed numerical values. If you click the mouse on the Ego aircraft, the aircraft information window appears on the right side of the simulator screen as shown below.","title":"Aircraft Info UI"},{"location":"getting-started/ui/#1-aircraft-control-mode","text":"Displays the mode to control the Ego aircraft with Manual Control Mode and Network Control Mode .","title":"1] Aircraft Control Mode"},{"location":"getting-started/ui/#2-proopulsion","text":"Displays engine RPM, air speed (knots), thrust according to throttle control and manifold pressure (inHg) according to aircraft altitude.","title":"2] Proopulsion"},{"location":"getting-started/ui/#3-flight-control","text":"Displays the attitude value according to the flight control surfaces and trim control, and the altitude and speed values \u200b\u200baccording to the vertical and horizontal movement of the aircraft in detailed numerical values. The attitude value of an aircraft can be displayed based on the control surface and trim control. The control surfaces, such as the ailerons and elevators, are used to control the roll, pitch, and yaw of the aircraft, while the trim control is used to adjust the neutral position of these surfaces. The altitude and speed values of the aircraft can be displayed in detailed numerical values based on its vertical and horizontal movement.","title":"3] Flight Control"},{"location":"intro/morai-simair/","text":"About MORAI SIM: Air \uf0c1 This section explains the concept and features of MORAI SIM: Air and the configuration environment. Concept and Key Features \uf0c1 MORAI SIM: Air is a simulation platform that can verify autonomous flight systems used in various industries such as Urban Air Mobility (UAM), unmanned aerial vehicles (Drones), and light aircraft in a virtual environment. MORAI SIM: Air provides a variety of real flight environments as virtual simulations using Digital Twin technology, so the safety of the aircraft can be verified more efficiently and accurately. And it reporduces actual flight facilities such as vertical take-off and landing facilities (vertiport) and airports for vehicle verification as a digital twin environment, and simulates the actual measurement data provided to the aircraft from each facility as it is. MORAI SIM: Air virtualizes various sensors and flight dynamics model (FDM) specialized for the aviation industry, and can transmit and receive data in real-time by applying communication such as ROS2 and UDP . The main features of MORAI SIM: Air are as follows. Provides a simulation environment based on Unreal Engine , a physics engine Supports realistic flight dynamics model (FDM) for Cirrus SR22 and 6 degrees of freedom (DOF) data Supports realistic flight dynamics model (FDM) developed with JSBSim , and 6 degrees of freedom (DOF) data Reproduces weather and time variation with dynamic environment Integration with external sensors and systems: Cameras, GNSS, IMU, RADAR, 3D LiDAR Supports real-time transmission of flight status messages and sensor data through ROS2 and UDP communication Simulation environment based on Unreal Engine \uf0c1 MORAI SIM: Air utilizes the physics engine, Unreal Engine to provide a high-fidelity simulation environment for autonomous aerial vehicles, and it can reproduce object movement, physical conditions such as collision and penetration, as well as color and texture realistically. The Unreal engine allows for the creation of highly detailed 3D environments and provides a sophisticated physics engine that can simulate the behavior of objects in a realistic manner. This means that the movement of the aerial vehicles, as well as other objects in the simulation environment, are accurately represented. Moreover, the Unreal engine can render textures and colors realistically, which helps to create a more immersive simulation experience for users. This allows users to visualize and interact with the simulation environment in a way that closely mirrors the real-world environment, and enables them to test and validate the performance of their autonomous flight systems under realistic conditions. Figure 1. 3D Simulation environment for Duluth airport provided by MORAI SIM: Air Supports realistic flight dynamics model and 6 DOF \uf0c1 MORAI SIM: Air supports realistic flight dynamics models (FDM) based on JSBsim for simulation modeling of the behavior of aircraft engines and other systems. Additionally, MORAI SIM: Air implements the Cirrus SR22 aircraft model and 6 degrees of freedom (DOF) data, providing a realistic simulation experience. Figure 2. SR22 model with joystick implemented in MORAI SIM: Air Reproduces weather and time variation with dynamic environment \uf0c1 MORAI SIM: Air also includes a simulation of the environment and weather conditions, which affect the flight behavior and performance of the aerial vehicles. This allows users to test their autonomous flight systems under different conditions and scenarios. Figure 3. Reproduced video of weather and time condition changes in MORAI SIM: Air Integration with external sensors and real-time communication \uf0c1 MORAI SIM: Air supports integration with a variety of external sensors commonly used in autonomous flight systems, including Camera, GNSS, IMU, and RADAR sensors. This enables users to test and validate the integration and performance of their sensors and systems in a virtual environment. Figure 4. Sensor models provided by MORAI SIM: Air Also, MORAI SIM: Air supports real-time communication for flight status messages and sensor data using the ROS2 and UDP communication protocols. This enables users to monitor and analyze the performance of their autonomous flight systems during the simulation in real-time. Figure 5. Network settings provided by MORAI SIM: Air","title":"About MORAI SIM: Air"},{"location":"intro/morai-simair/#about-morai-sim-air","text":"This section explains the concept and features of MORAI SIM: Air and the configuration environment.","title":"About MORAI SIM: Air"},{"location":"intro/morai-simair/#concept-and-key-features","text":"MORAI SIM: Air is a simulation platform that can verify autonomous flight systems used in various industries such as Urban Air Mobility (UAM), unmanned aerial vehicles (Drones), and light aircraft in a virtual environment. MORAI SIM: Air provides a variety of real flight environments as virtual simulations using Digital Twin technology, so the safety of the aircraft can be verified more efficiently and accurately. And it reporduces actual flight facilities such as vertical take-off and landing facilities (vertiport) and airports for vehicle verification as a digital twin environment, and simulates the actual measurement data provided to the aircraft from each facility as it is. MORAI SIM: Air virtualizes various sensors and flight dynamics model (FDM) specialized for the aviation industry, and can transmit and receive data in real-time by applying communication such as ROS2 and UDP . The main features of MORAI SIM: Air are as follows. Provides a simulation environment based on Unreal Engine , a physics engine Supports realistic flight dynamics model (FDM) for Cirrus SR22 and 6 degrees of freedom (DOF) data Supports realistic flight dynamics model (FDM) developed with JSBSim , and 6 degrees of freedom (DOF) data Reproduces weather and time variation with dynamic environment Integration with external sensors and systems: Cameras, GNSS, IMU, RADAR, 3D LiDAR Supports real-time transmission of flight status messages and sensor data through ROS2 and UDP communication","title":"Concept and Key Features"},{"location":"intro/morai-simair/#simulation-environment-based-on-unreal-engine","text":"MORAI SIM: Air utilizes the physics engine, Unreal Engine to provide a high-fidelity simulation environment for autonomous aerial vehicles, and it can reproduce object movement, physical conditions such as collision and penetration, as well as color and texture realistically. The Unreal engine allows for the creation of highly detailed 3D environments and provides a sophisticated physics engine that can simulate the behavior of objects in a realistic manner. This means that the movement of the aerial vehicles, as well as other objects in the simulation environment, are accurately represented. Moreover, the Unreal engine can render textures and colors realistically, which helps to create a more immersive simulation experience for users. This allows users to visualize and interact with the simulation environment in a way that closely mirrors the real-world environment, and enables them to test and validate the performance of their autonomous flight systems under realistic conditions. Figure 1. 3D Simulation environment for Duluth airport provided by MORAI SIM: Air","title":"Simulation environment based on Unreal Engine"},{"location":"intro/morai-simair/#supports-realistic-flight-dynamics-model-and-6-dof","text":"MORAI SIM: Air supports realistic flight dynamics models (FDM) based on JSBsim for simulation modeling of the behavior of aircraft engines and other systems. Additionally, MORAI SIM: Air implements the Cirrus SR22 aircraft model and 6 degrees of freedom (DOF) data, providing a realistic simulation experience. Figure 2. SR22 model with joystick implemented in MORAI SIM: Air","title":"Supports realistic flight dynamics model and 6 DOF"},{"location":"intro/morai-simair/#reproduces-weather-and-time-variation-with-dynamic-environment","text":"MORAI SIM: Air also includes a simulation of the environment and weather conditions, which affect the flight behavior and performance of the aerial vehicles. This allows users to test their autonomous flight systems under different conditions and scenarios. Figure 3. Reproduced video of weather and time condition changes in MORAI SIM: Air","title":"Reproduces weather and time variation with dynamic environment"},{"location":"intro/morai-simair/#integration-with-external-sensors-and-real-time-communication","text":"MORAI SIM: Air supports integration with a variety of external sensors commonly used in autonomous flight systems, including Camera, GNSS, IMU, and RADAR sensors. This enables users to test and validate the integration and performance of their sensors and systems in a virtual environment. Figure 4. Sensor models provided by MORAI SIM: Air Also, MORAI SIM: Air supports real-time communication for flight status messages and sensor data using the ROS2 and UDP communication protocols. This enables users to monitor and analyze the performance of their autonomous flight systems during the simulation in real-time. Figure 5. Network settings provided by MORAI SIM: Air","title":"Integration with external sensors and real-time communication"},{"location":"user-guide/","text":"How to Use MORAI SIM: AIR \uf0c1 Basic Controls Network Configurations Sensors Useful Functions","title":"How to Use MORAI SIM: AIR"},{"location":"user-guide/#how-to-use-morai-sim-air","text":"Basic Controls Network Configurations Sensors Useful Functions","title":"How to Use MORAI SIM: AIR"},{"location":"user-guide/basic-controls/","text":"Basic Controls \uf0c1 The purpose, target audiences, and scope of this document is as follows: Purpose \uf0c1 Target Audience \uf0c1 Scope \uf0c1 Markdown file Old URL New URL index.md index.html index.html foo.md foo/index.html foo.html foo/bar.md foo/bar/index.html foo/bar.html","title":"Basic Controls"},{"location":"user-guide/basic-controls/#basic-controls","text":"The purpose, target audiences, and scope of this document is as follows:","title":"Basic Controls"},{"location":"user-guide/basic-controls/#purpose","text":"","title":"Purpose"},{"location":"user-guide/basic-controls/#target-audience","text":"","title":"Target Audience"},{"location":"user-guide/basic-controls/#scope","text":"Markdown file Old URL New URL index.md index.html index.html foo.md foo/index.html foo.html foo/bar.md foo/bar/index.html foo/bar.html","title":"Scope"},{"location":"user-guide/network/","text":"Network Configuration \uf0c1 This doucument's revision history is as follows: Markdown file Old URL New URL index.md index.html index.html foo.md foo/index.html foo.html foo/bar.md foo/bar/index.html foo/bar.html","title":"Network Configurations"},{"location":"user-guide/network/#network-configuration","text":"This doucument's revision history is as follows: Markdown file Old URL New URL index.md index.html index.html foo.md foo/index.html foo.html foo/bar.md foo/bar/index.html foo/bar.html","title":"Network Configuration"},{"location":"user-guide/sensors/","text":"How to Use Sensors in MORAI SIM Air \uf0c1 Terminology \uf0c1 The main teminology used for this documents is as follows: Old Variable Name New Variable Name or Expression current_page page include_nav nav|length>1 include_next_prev (page.next_page or page.previous_page) site_name config.site_name site_author config.site_author page_description config.site_description repo_url config.repo_url repo_name config.repo_name site_url config.site_url copyright config.copyright google_analytics config.google_analytics homepage_url nav.homepage.url favicon {{ base_url }}/img/favicon.ico Conventions \uf0c1 The main teminology used for this documents is as follows:","title":"Sensor Setting"},{"location":"user-guide/sensors/#how-to-use-sensors-in-morai-sim-air","text":"","title":"How to Use Sensors in MORAI SIM Air"},{"location":"user-guide/sensors/#terminology","text":"The main teminology used for this documents is as follows: Old Variable Name New Variable Name or Expression current_page page include_nav nav|length>1 include_next_prev (page.next_page or page.previous_page) site_name config.site_name site_author config.site_author page_description config.site_description repo_url config.repo_url repo_name config.repo_name site_url config.site_url copyright config.copyright google_analytics config.google_analytics homepage_url nav.homepage.url favicon {{ base_url }}/img/favicon.ico","title":"Terminology"},{"location":"user-guide/sensors/#conventions","text":"The main teminology used for this documents is as follows:","title":"Conventions"},{"location":"user-guide/useful/","text":"Useful functions and Tips \uf0c1 Terminology \uf0c1 The main teminology used for this documents is as follows: Old Variable Name New Variable Name or Expression current_page page include_nav nav|length>1 include_next_prev (page.next_page or page.previous_page) site_name config.site_name site_author config.site_author page_description config.site_description repo_url config.repo_url repo_name config.repo_name site_url config.site_url copyright config.copyright google_analytics config.google_analytics homepage_url nav.homepage.url favicon {{ base_url }}/img/favicon.ico Conventions \uf0c1 The main teminology used for this documents is as follows:","title":"Useful Functions"},{"location":"user-guide/useful/#useful-functions-and-tips","text":"","title":"Useful functions and Tips"},{"location":"user-guide/useful/#terminology","text":"The main teminology used for this documents is as follows: Old Variable Name New Variable Name or Expression current_page page include_nav nav|length>1 include_next_prev (page.next_page or page.previous_page) site_name config.site_name site_author config.site_author page_description config.site_description repo_url config.repo_url repo_name config.repo_name site_url config.site_url copyright config.copyright google_analytics config.google_analytics homepage_url nav.homepage.url favicon {{ base_url }}/img/favicon.ico","title":"Terminology"},{"location":"user-guide/useful/#conventions","text":"The main teminology used for this documents is as follows:","title":"Conventions"}]}